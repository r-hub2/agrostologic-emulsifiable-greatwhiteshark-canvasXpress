---

title: "Proposal and MVPs"

format: html

editor: visual

---

\## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see \<https://quarto.org\>.

\## Running Code

When you click the \*\*Render\*\* button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

\### Framework Architecture

\`\`\`{mermaid}

graph TD

A1\[Public Databases - DrugBank SIDER KEGG\] --\>\|dbparser R\| A2\[dvobject\]

A2 --\> A3\[Staging DB - PostgreSQL\]

B1\[Unstructured Literature - PubMed\] --\>\|LLM Pipeline\| B2\[Extracted Triples\]

A3 --\>\|1. Query Structured Data\| B3\[KG Ingestion Script\]

B2 --\>\|2. Add Unstructured Data\| B3

B3 --\>\|3. Normalize and Ingest\| B4\[Graph DB - Neo4j\]

B4 --\> C1\[GNN Training - Link Prediction O2\]

C1 --\> C2\[Trained GNN Model\]

C1 --\> C3\[Explainability Module - GNNExplainer O3\]

C3 --\> C4\[Explanation Generator\]

D1\[Python Shiny Server\]

D1 --\>\|1. User Query\| D2\[Query Handler\]

D2 --\>\|2. Fetch Graph Context\| B4

D2 --\>\|3. Run Prediction\| C2

D2 --\>\|4. Generate Explanation\| C4

D2 --\>\|5. Format Results\| D1

D1 --\>\|6. Send Data to UI\| E1\[Python Shiny UI\]

E1 --\> E2\[Input and Controls\]

E1 --\> E3\[Data Tables and Metrics\]

E1 --\> E4\[Visualization Pane\]

E4 --\> E5\[Cytoscape.js for Graph/XAI\]

E4 --\> E6\[canvasXpress for Analytics\]

C1 --\> F1\[Performance Metrics - ROC-AUC Hits\@K\]

C4 --\> F2\[Case-Based Clinical Relevance Checks\]

style A3 fill:#D6EAF8,stroke:#333,stroke-width:2px

style B4 fill:#D6EAF8,stroke:#333,stroke-width:2px

style E5 fill:#D5F5E3,stroke:#333,stroke-width:2px

\`\`\`

another document

\`\`\`{mermaid}

graph TD

A1\[Public Databases\]:::dataInput --\>\|dbparser R\| A2\[dvobject\]:::process

A2 --\> A3\[Staging DB PostgreSQL\]:::database

B1\[Unstructured Literature\]:::dataInput --\>\|LLM Pipeline\| B2\[Extracted Triples\]:::process

A3 -.-\>\|Query Data\| B3\[KG Ingestion Script\]:::process

B2 -.-\>\|Add Data\| B3

B3 --\>\|Normalize\| B4\[Graph DB Neo4j\]:::database

B4 --\> C1\[GNN Training\]:::model

C1 --\> C2\[Trained Model\]:::model

C1 --\> C3\[Explainability\]:::explain

C3 --\> C4\[Explanations\]:::explain

D1\[Python Shiny Server\]:::server

D1 --\>\|User Query\| D2\[Query Handler\]:::handler

D2 -.-\>\|Fetch Context\| B4

D2 -.-\>\|Run Prediction\| C2

D2 -.-\>\|Get Explanation\| C4

D1 --\>\|Send to UI\| E1\[Python Shiny UI\]:::ui

E1 --\> E2\[Input Controls\]:::ui

E1 --\> E3\[Data Tables\]:::ui

E1 --\> E4\[Visualizations\]:::ui

E4 --\> E5\[Cytoscape.js\]:::viz

E4 --\> E6\[canvasXpress\]:::viz

C1 -.-\> F1\[Performance Metrics\]:::eval

C4 -.-\> F2\[Clinical Relevance\]:::eval

classDef dataInput fill:#D6EAF8,stroke:#2874A6,stroke-width:2px

classDef process fill:#FADBD8,stroke:#E74C3C,stroke-width:1px

classDef database fill:#D5F4E6,stroke:#27AE60,stroke-width:2px

classDef model fill:#FCF3CF,stroke:#F39C12,stroke-width:1px

classDef explain fill:#EBDEF0,stroke:#8E44AD,stroke-width:1px

classDef server fill:#E8DAEF,stroke:#7D3C98,stroke-width:1px

classDef handler fill:#D4E6F1,stroke:#2980B9,stroke-width:1px

classDef ui fill:#D0ECE7,stroke:#16A085,stroke-width:1px

classDef viz fill:#D5F5E3,stroke:#239B56,stroke-width:2px

classDef eval fill:#FADBD8,stroke:#E74C3C,stroke-width:1px

\`\`\`
